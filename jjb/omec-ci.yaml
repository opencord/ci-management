---
# omec-ci jobs
# Uses github pull request builder to trigger and Jenkinsfiles from this repo
#  https://github.com/omec-project/omec-project-ci

# license check
- project:
    name: omec-license-check

    blackduck-project: omec

    jobs:
      - 'synopsys-periodic-check':
          github-organization: 'omec-project'
          build-node: "ubuntu16.04-basebuild-2c-4g"
          git-server-url: "https://github.com/omec-project"

# generic OMEC test-case jobs, shared by other projects and triggered within pipelines
- project:
    name: omec
    build-node: 'intel-102'

    github_pr_auth_id: '64fe2b1a-b33a-4f13-8442-ad8360434003'
    github_pr_org_list:
      - 'omec-project'

    jobs:
      - 'omec-tc1'
      - 'omec-tc2'

# for ngic-rtc
- project:
    name: ngic-rtc
    project: '{name}'

    build-node: 'intel-102'

    github-organization: 'omec-project'

    github_pr_auth_id: '64fe2b1a-b33a-4f13-8442-ad8360434003'
    github_pr_org_list:
      - 'omec-project'

    jobs:
      - 'omec-combined':
          pipeline-file: 'Jenkinsfile-omec-combined.groovy'
      - 'omec-install':
          sub-project: '{name}'
          pipeline-file: 'Jenkinsfile-omec-install-ngic-rtc-vnf.groovy'
      - 'docker-publish-github':
          build-timeout: 30
          docker-repo: 'omecproject'

# for c3po
- project:
    name: c3po
    project: '{name}'

    build-node: 'intel-102'

    github-organization: 'omec-project'

    github_pr_auth_id: '64fe2b1a-b33a-4f13-8442-ad8360434003'
    github_pr_org_list:
      - 'omec-project'

    jobs:
      - 'omec-combined':
          pipeline-file: 'Jenkinsfile-omec-combined.groovy'
      - 'omec-install':
          sub-project: 'c3po-sgx'
          pipeline-file: 'Jenkinsfile-omec-install-c3po-sgx-vnf.groovy'
      - 'omec-install':
          sub-project: 'c3po-hss'
          pipeline-file: 'Jenkinsfile-omec-install-c3po-hss-vnf.groovy'
      - 'docker-publish-github':
          build-timeout: 30
          docker-repo: 'omecproject'

# for openmme
- project:
    name: openmme
    project: '{name}'

    build-nod: 'intel-102'

    github-organization: 'omec-project'

    github_pr_auth_id: '64fe2b1a-b33a-4f13-8442-ad8360434003'
    github_pr_org_list:
      - 'omec-project'

    jobs:
      - 'omec-combined':
          pipeline-file: 'Jenkinsfile-omec-combined.groovy'
      - 'omec-install':
          sub-project: '{name}'
          pipeline-file: 'Jenkinsfile-omec-install-openmme-vnf.groovy'
      - 'docker-publish-github':
          build-timeout: 30
          docker-repo: 'omecproject'

# Combined pipeline
- job-template:
    id: 'omec-combined'
    name: 'omec_{project}_combined'
    project-type: pipeline

    description: |
      <!-- Managed by Jenkins Job Builder -->
      Created by {id} job-template from ci-management/jjb/omec-ci.yaml<br />

    properties:
      - cord-infra-properties:
          build-days-to-keep: '{build-days-to-keep}'
          artifact-num-to-keep: '{artifact-num-to-keep}'
      - github:
          url: 'https://github.com/{github-organization}/{project}'
      - build-blocker:
          use-build-blocker: true
          blocking-jobs:
            - "omec_.*_combined"

    wrappers:
      - lf-infra-wrappers:
          build-timeout: '{build-timeout}'
          jenkins-ssh-credential: '{jenkins-ssh-credential}'

    parameters:
      - string:
          name: buildNode
          default: '{build-node}'
          description: 'Name of the Jenkins executor node to run the job on'

      - string:
          name: project
          default: '{project}'
          description: 'Name of the project'

    triggers:
      - cord-infra-github-pr-trigger:
          github_pr_org_list: '{obj:github_pr_org_list}'
          github_pr_auth_id: '{github_pr_auth_id}'

    concurrent: false

    pipeline-scm:
      script-path: '{pipeline-file}'
      scm:
        - git:
            url: 'https://github.com/{github-organization}/omec-project-ci'
            branches:
              - 'master'


# install jobs, run for each project
- job-template:
    id: 'omec-install'
    name: 'omec_{sub-project}_install'
    project-type: pipeline

    description: |
      <!-- Managed by Jenkins Job Builder -->
      Created by {id} job-template from ci-management/jjb/omec-ci.yaml<br />

    properties:
      - cord-infra-properties:
          build-days-to-keep: '{build-days-to-keep}'
          artifact-num-to-keep: '{artifact-num-to-keep}'
      - github:
          url: 'https://github.com/{github-organization}/{project}'

    wrappers:
      - lf-infra-wrappers:
          build-timeout: '{build-timeout}'
          jenkins-ssh-credential: '{jenkins-ssh-credential}'

    parameters:
      - string:
          name: buildNode
          default: '{build-node}'
          description: 'Name of the Jenkins executor node to run the job on'

      - string:
          name: project
          default: '{project}'
          description: 'Name of the project'

    concurrent: false

    pipeline-scm:
      script-path: '{pipeline-file}'
      scm:
        - git:
            url: 'https://github.com/{github-organization}/omec-project-ci'
            branches:
              - 'master'

# tests
- job-template:
    id: 'omec-tc1'
    name: 'omec_tc1'
    project-type: pipeline

    description: |
      <!-- Managed by Jenkins Job Builder -->
      Created by {id} job-template from ci-management/jjb/omec-ci.yaml<br />

    properties:
      - cord-infra-properties:
          build-days-to-keep: '{build-days-to-keep}'
          artifact-num-to-keep: '{artifact-num-to-keep}'

    wrappers:
      - lf-infra-wrappers:
          build-timeout: '{build-timeout}'
          jenkins-ssh-credential: '{jenkins-ssh-credential}'

    parameters:
      - string:
          name: buildNode
          default: '{build-node}'
          description: 'Name of the Jenkins executor node to run the job on'

    concurrent: false

    pipeline-scm:
      script-path: 'Jenkinsfile-omec-test-TC1.groovy'
      scm:
        - git:
            url: 'https://github.com/omec-project/omec-project-ci'
            branches:
              - 'master'

- job-template:
    id: 'omec-tc2'
    name: 'omec_tc2'
    project-type: pipeline

    description: |
      <!-- Managed by Jenkins Job Builder -->
      Created by {id} job-template from ci-management/jjb/omec-ci.yaml<br />

    properties:
      - cord-infra-properties:
          build-days-to-keep: '{build-days-to-keep}'
          artifact-num-to-keep: '{artifact-num-to-keep}'

    wrappers:
      - lf-infra-wrappers:
          build-timeout: '{build-timeout}'
          jenkins-ssh-credential: '{jenkins-ssh-credential}'

    parameters:
      - string:
          name: buildNode
          default: '{build-node}'
          description: 'Name of the Jenkins executor node to run the job on'

    concurrent: false

    pipeline-scm:
      script-path: 'Jenkinsfile-omec-test-TC2.groovy'
      scm:
        - git:
            url: 'https://github.com/omec-project/omec-project-ci'
            branches:
              - 'master'

