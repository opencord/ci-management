---
# CORD lint and static code validation job templates
# These are invoked by the per-git-repo jobs stored in jjb/validate/

# Verify that there is valid license/copyright on files
- job-template:
    id: verify-licensed
    name: 'verify-{project}-licensed-{stream}'

    triggers:
      - cord-infra-gerrit-trigger-patchset:
          gerrit-server-name: '{gerrit-server-name}'
          project-regex: '^{project}$'
          stream: '{stream}'
          dependency-jobs: '{dependency-jobs}'

    properties:
      - lf-infra-properties:
          project: '{project}'
          build-days-to-keep: '{build-days-to-keep}'

    wrappers:
      - lf-infra-wrappers:
          build-timeout: '{build-timeout}'
          jenkins-ssh-credential: '{jenkins-ssh-credential}'

    parameters:
      - lf-infra-parameters:
          project: '{project}'
          branch: '{stream}'
          stream: '{stream}'
          lftools-version: '{lftools-version}'

    scm:
      - lf-infra-gerrit-scm:
          git-url: '$GIT_URL/$GERRIT_PROJECT'
          refspec: '$GERRIT_REFSPEC'
          branch: '$GERRIT_BRANCH'
          submodule-recursive: 'false'
          choosing-strategy: gerrit
          jenkins-ssh-credential: '{jenkins-ssh-credential}'

    node: '{build-node}'
    project-type: freestyle
    concurrent: true

    builders:
      - shell: !include-raw-escape: shell/licensecheck.sh


# run `ansible-lint` to validate ansible playbooks/roles
- job-template:
    id: verify-ansible-lint
    name: 'verify-{project}-ansible-lint-{stream}'

    triggers:
      - cord-infra-gerrit-trigger-patchset:
          gerrit-server-name: '{gerrit-server-name}'
          project-regex: '^{project}$'
          stream: '{stream}'
          dependency-jobs: '{dependency-jobs}'

    properties:
      - lf-infra-properties:
          project: '{project}'
          build-days-to-keep: '{build-days-to-keep}'

    wrappers:
      - lf-infra-wrappers:
          build-timeout: '{build-timeout}'
          jenkins-ssh-credential: '{jenkins-ssh-credential}'

    parameters:
      - lf-infra-parameters:
          project: '{project}'
          branch: '{stream}'
          stream: '{stream}'
          lftools-version: '{lftools-version}'

    scm:
      - lf-infra-gerrit-scm:
          git-url: '$GIT_URL/$GERRIT_PROJECT'
          refspec: '$GERRIT_REFSPEC'
          branch: '$GERRIT_BRANCH'
          submodule-recursive: 'false'
          choosing-strategy: gerrit
          jenkins-ssh-credential: '{jenkins-ssh-credential}'

    node: '{build-node}'
    project-type: freestyle
    concurrent: true

    builders:
      - shell: !include-raw-escape: shell/ansiblelint.sh


# run `helm lint --strict` to validate helm charts
- job-template:
    id: verify-helm-lint
    name: 'verify-{project}-helm-lint-{stream}'

    triggers:
      - cord-infra-gerrit-trigger-patchset:
          gerrit-server-name: '{gerrit-server-name}'
          project: '^{project}$'
          stream: '{stream}'
          dependency-jobs: []

    properties:
      - lf-infra-properties:
          project: '{project}'
          build-days-to-keep: '{build-days-to-keep}'

    wrappers:
      - lf-infra-wrappers:
          build-timeout: '{build-timeout}'
          jenkins-ssh-credential: '{jenkins-ssh-credential}'

    parameters:
      - lf-infra-parameters:
          project: '{project}'
          branch: '{stream}'
          stream: '{stream}'
          lftools-version: '{lftools-version}'

    scm:
      - lf-infra-gerrit-scm:
          git-url: '$GIT_URL/$GERRIT_PROJECT'
          refspec: '$GERRIT_REFSPEC'
          branch: '$GERRIT_BRANCH'
          submodule-recursive: 'false'
          choosing-strategy: gerrit
          jenkins-ssh-credential: '{jenkins-ssh-credential}'

    node: '{build-node}'
    project-type: freestyle
    concurrent: true

    builders:
      - shell: !include-raw-escape: shell/helmlint.sh
