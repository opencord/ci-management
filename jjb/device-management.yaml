---
# device-management tests

- job-template:
    id: 'device-management-patch-test'
    name: 'verify_{project}_sanity-test{name-extension}'
    extra-helm-flags: ''
    skip-vote: false
    volthaSystemTestsChange: ''
    volthaHelmChartsChange: ''

    description: |
      <!-- Managed by Jenkins Job Builder -->
      Created by {id} job-template from ci-management/jjb/device-management.yaml  <br /><br />
      Validation for device-management using mock redfish servers

    properties:
      - cord-infra-properties:
          build-days-to-keep: '{build-days-to-keep}'
          artifact-num-to-keep: '{artifact-num-to-keep}'

    wrappers:
      - lf-infra-wrappers:
          build-timeout: '{build-timeout}'
          jenkins-ssh-credential: '{jenkins-ssh-credential}'

    parameters:
      - string:
          name: buildNode
          default: 'ubuntu18.04-basebuild-4c-8g'
          description: 'Name of the Jenkins node to run the job on'

      - string:
          name: branch
          default: 'master'
          description: 'Name of the repo branch to use'

      - string:
          name: gerritProject
          default: '$GERRIT_PROJECT'
          description: 'Name of the Gerrit project'

      - string:
          name: gerritRefspec
          default: '$GERRIT_REFSPEC'
          description: 'PatchSet REFSPEC in Gerrit, example value: "refs/changes/79/18779/13"'

      - string:
          name: extraHelmFlags
          default: '{extra-helm-flags}'
          description: 'Helm flags to pass to every helm install command'

      - string:
          name: volthaSystemTestsChange
          default: '{volthaSystemTestsChange}'
          description: 'Download a change for gerrit in the voltha-system-tests repo, example value: "refs/changes/79/18779/13"'

      - string:
          name: volthaHelmChartsChange
          default: '{volthaHelmChartsChange}'
          description: 'Download a change for gerrit in the voltha-helm-charts repo, example value: "refs/changes/79/18779/13"'

    project-type: pipeline
    concurrent: true

    dsl: !include-raw-escape: pipeline/{pipeline-script}

    triggers:
      - gerrit:
          server-name: '{gerrit-server-name}'
          dependency-jobs: '{dependency-jobs}'
          silent-start: true
          trigger-on:
            - patchset-created-event:
                exclude-drafts: true
                exclude-trivial-rebase: false
                exclude-no-code-change: true
            - draft-published-event
            - comment-added-contains-event:
                comment-contains-value: '(?i)^.*recheck$'
          projects:
            - project-compare-type: REG_EXP
              project-pattern: '^device-management$'
              branches:
                - branch-compare-type: REG_EXP
                  branch-pattern: '{branch-regexp}'
              file-paths:
                - compare-type: REG_EXP
                  pattern: '{all-files-regexp}'
          skip-vote:
            successful: '{skip-vote}'
            failed: '{skip-vote}'
            unstable: '{skip-vote}'
            notbuilt: '{skip-vote}'
